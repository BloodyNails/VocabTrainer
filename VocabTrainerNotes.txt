TODO:
	- implement warning warning when removing list
	- remove questionmark in url after forwarding request, might cause errors later
	- vocabulary
	- create stats table
	
	- VocabTrainer/Training:
		- /Vocabulary:
			Sequence:
				0: check if interrupted round:
						yes: get last_cycle_id from round, check if cycle interrupted: 
							yes: get curr_word_id from cycle, load word and continue with (5), start timer again
							no: start new cycle
						no: start a new round go to (1)
				1: (select specific list || select all lists) -> choose language to be prompted
				2: all words from selected lists read from "words" and written to "vocab_words" with: prompted = false
				3: create cycle (false_count = 0, true_count = 0), add cycle_id to cycle_ids in "rounds", count words in "vocab_words" and set cycle->word_count to counted value, set prompted to false for all words in "vocab_words", start timer
				4: create prompt: get all "prompted == false" words from "vocab_words", 
					if amount == 0: stop timer, end cycle
						check false_count: 
							if fc == 0: end round (6)
							if fc > 0: start new cycle (3)
					if amount > 0: get random word from "prompted == false" words
				5: input false: false_count+1 (code and db), mark word as prompted in "vocab_words", go to (4)
					input true: true_count+1 (code and db), delete word in "vocab_words", go to (4)
				6: round finished: get all stats from cycles, ...
			
			- make every round cycle based: first cycle all words, second cycle the words you didn't know at first, and so on... until you entered every word correct
			- layout:
				- timer which increases whilst the round proceeds
				- label: question (get a random word from the amount of words which has been selected before, which has not been questioned yet)
				- input: answer (translate the word from label to your selected language)
				- button: submit (send answer to servlet and check for errors)
			- stats: 
				correctness (therefore also: total number of false/true inputs), 
				time -> therefore add timer and display it on every round
				total number of cycles, 
				avg. cycles per round
	
Database Stuff:

	Tables:
	
		lists (
			list_id PRIMARY KEY, 
			description, 
			lang1, 
			lang2
		)
		
		words (
			word_id PRIMARY KEY, 
			list_id FOREIGN KEY, 
			word_lang1, 
			word_lang2
		)
		
		cycle (
			cycle_id PRIMARY KEY,
			round_id FOREIGN KEY,
			completed (true || false)
			word_count,
			curr_word_id, 
			true_count,
			false_count,
			tf_ratio : r = false_count / true_count,
			time
		)
		
		// all words from selected lists will be pasted here
		vocab_words ( 
			word_id,
			word_lang1,
			word_lang2,
			prompted (true || false)
		)
		
		round (
			round_id PRIMARY KEY,
			completed (true || false),
			list_ids (array of all list ID's the words came from),
			lang1,
			lang2,
			prompted_lang,
			cycle_ids (array of ID's from all cycles),
			time (sum of all cycle time), 
			true_count,
			false_count,
			tf_ratio : avg. ratio of all cycles 
		)
		
		total_stats (
			round_count,
			word_count,
			cycle_count,
			total_time,
			true_count,
			false_count,
			true_false_ratios (array with ratios of all cycles),
			total_true_false_ratio (avg. overall ratio)
			worst_list (the list you should learn the most, because you had lots of false inputs)
		)
		
		
	W/OUT AUTO_INCREMENT:
			
		CREATE TABLE lists(
			list_id INT UNSIGNED NOT NULL PRIMARY KEY,
			description VARCHAR(180),
			lang1 VARCHAR(60) NOT NULL,
			lang2 VARCHAR(60) NOT NULL
			);
			
		CREATE TABLE words(
			word_id INT UNSIGNED NOT NULL,
			list_id INT UNSIGNED NOT NULL,
			word_lang1 VARCHAR(100) NOT NULL,
			word_lang2 VARCHAR(100) NOT NULL,
			PRIMARY KEY (word_id),
			FOREIGN KEY (list_id) REFERENCES lists(list_id)
			);	